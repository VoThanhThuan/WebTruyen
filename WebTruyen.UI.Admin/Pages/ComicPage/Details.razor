@page "/comic/detail/{nameAlias}"
@using WebTruyen.UI.Admin.Service.ComicService
@using WebTruyen.Library.Entities.ViewModel
@using WebTruyen.Library.Enums
@using WebTruyen.UI.Admin.Components;
@using WebTruyen.UI.Admin.RequestClient
@using WebTruyen.UI.Admin.Service.ChapterService
@using WebTruyen.UI.Admin.Service.ImageService
@using WebTruyen.UI.Admin.Service.PageService


<link href="./resources/css/animation.css" rel="stylesheet" />

@if (_comic == null)
{
    <Loading></Loading>
}
else
{
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
        <symbol id="check-circle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </symbol>
        <symbol id="info-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z" />
        </symbol>
        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>
    </svg>
    @if (_element.Apiresult == 204)
    {
        <div class="alert alert-success d-flex align-items-center alert-dismissible" role="alert">
            <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Success:"><use xlink:href="#check-circle-fill" /></svg>
            <div>
                Cập nhật thành công.
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else if (_element.Apiresult != 0)
    {
        <div class="alert alert-danger d-flex align-items-center alert-dismissible" role="alert">
            <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
            <div>
                Cập nhật thất bại.
            </div>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

<div class="container">
    <div class="row g-2 g-lg-3">
        <div class="col" style="min-width: 18rem;">
            <div class="card slide-in-elliptic-top-fwd" style="min-width: 18rem; z-index: 1">
                <img src="@_element.ThumbnailComic" class="card-img-top mx-auto" alt="@_comic.NameAlias" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title">@_comic.Name</h5>
                    <p class="card-text">@_comic.Description</p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Tác Giả:@_comic.Author</li>
                    <li class="list-group-item">
                        @switch (_comic.Status)
                        {
                            case Status.InProgress:
                                <div>Tình Trạng: Đang Tiến Hành</div>
                                break;
                            case Status.IsFinish:
                                <div>Tình Trạng: Đã Hoàn Thành</div>
                                break;
                            case Status.Drop:
                                <div>Tình Trạng: Ngưng Dịch</div>
                                break;
                            default:
                                <div> Tình Trạng: Đang Tiến Hành</div>
                                break;

                        }

                    </li>

                    <li class="list-group-item">Lượt Xem:@_comic.Views</li>
                </ul>
                <div class="card-body">
                    <button type="button" class="btn btn-primary" @onclick=OpenUpdate>@_element.TextButtonUpdate</button>
                    <a href="#" class="card-link">Xóa</a>
                </div>
            </div>
        </div>
        @if (_element.IsShow)
        {
            <div class="col" style="min-width: 18rem;">
                <div class="flex-wrap @_element.AnimationSlide">
                    <EditForm Model="@_comicRequest" OnSubmit="@Update">
                        <span>Hình</span>
                        <InputFile class="form-control" OnChange="InputImage" @bind-Value="_comicRequest.Thumbnail" name="Thumbnail"></InputFile>
                        <span>Tên</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.Name"></InputText>
                        <span>Tên Khác</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.AnotherNameOfComic"></InputText>
                        <span>Tác Giả</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.Author"></InputText>
                        <span>Mô Tả</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.Description"></InputText>
                        <span>Tình Trạng</span>
                        <InputSelect class="form-control" @bind-Value="_comicRequest.Status">
                            <option value="0">Đang Tiến Hành</option>
                            <option value="1">Đã Hoàn Thành</option>
                            <option value="2">Đã Hủy</option>
                        </InputSelect>
                        @if (_element.IsSubmit)
                        {
                            <InputFile type="submit" class="btn btn-primary mt-3" value="Save" accept="image/*"/>
                        }
                        else
                        {
                            <button class="btn btn-primary mt-5" type="button" disabled>
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                Loading...
                            </button>
                        }
                    </EditForm>
                </div>
            </div>
        }

        <div class="col" style="min-width: 18rem;">
            <a class="btn btn-outline-primary" href="./chapter?comic=@NameAlias"><i class="far fa-plus"></i> Thêm Chap</a>
            <div class="flex-wrap">
                <!--button call offcanvas-bottom -->
                <!--Chapter -->
                @if (!_chapters.Any())
                {
                    <div>Loading...</div>
                }
                else
                {
                    foreach (var chapter in _chapters)
                    {
                        <button type="button" class="btn btn-outline-primary" @onclick="() => GetPages(chapter.Id)" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">Chap @chapter.Ordinal</button>
                    }
                }

            </div>
        </div>

    </div>

    <!-- offcanvas-bottom -->
    <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel">
        <div class="offcanvas-header">
            <div class="d-flex">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">Chaper View</li>
                        <li class="breadcrumb-item active" aria-current="page">
                            Edit
                        </li>
                    </ol>
                </nav>

            </div>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body small">
            @if (!_pages.Any())
            {
                <div>Loading...</div>
            }
            else
            {
                <div class="d-flex flex-row">
                    @foreach (var page in _pages)
                    {
                        <div style="height: 12rem; width: 12rem;">
                            <img src="@(page.Image)" class="img-thumbnail" />
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>
}

@code {
    [Parameter]
    public string NameAlias { get; set; }

    [Inject] private IComicApiClient _ComicApi { get; set; }
    [Inject] private IChapterService _ChapterApi { get; set; }
    [Inject] private IPageService _PageApi { get; set; }
    [Inject] private IImageService _image { get; set; }

    private ComicVM _comic = new ComicVM();
    private ComicRequestClient _comicRequest = new ComicRequestClient();
    private IEnumerable<ChapterVM> _chapters = new List<ChapterVM>();
    private IEnumerable<PageVM> _pages = new List<PageVM>();
    private ViewElement _element = new ViewElement();

    protected override async Task OnInitializedAsync()
    {
        _comic = await _ComicApi.GetComic(NameAlias);
        _comic.Name ??= "";
        _comic.NameAlias ??= "";
        _comic.AnotherNameOfComic ??= "";
        _comic.Author ??= "";
        _comic.Description ??= "";
        _element.ThumbnailComic = _comic.Thumbnail;

        _comicRequest.Id = _comic.Id;
        _comicRequest.Name = _comic.Name;
        _comicRequest.NameAlias = _comic.NameAlias;
        _comicRequest.AnotherNameOfComic = _comic.AnotherNameOfComic;
        _comicRequest.Author = _comic.Author;
        _comicRequest.Description = _comic.Description;

        GetChapters();
    }

    /// <summary>
    /// Mở Form cập nhật
    /// </summary>
    private async void OpenUpdate()
    {
        _element.TextButtonUpdate = _element.IsShow ? "Cập Nhật" : "Hủy";
        _element.AnimationSlide = _element.IsShow ? "slide-out-elliptic-right-fwd" : "slide-in-elliptic-right-fwd";
        if (_element.IsShow)
            await Task.Delay(400);
        _element.IsShow = !_element.IsShow;
        StateHasChanged();
    }

    /// <summary>
    /// Cập nhật dữ liệu lên server
    /// </summary>
    private async void Update()
    {
        _element.Apiresult = await _ComicApi.PutComic(_comicRequest.Id, _comicRequest);
        StateHasChanged();
    }

    /// <summary>
    /// Hiển thị image preview và lấy dữ liệu image
    /// </summary>
    /// <param name="e"></param>
    private async void InputImage(InputFileChangeEventArgs e)
    {
        if(e == null) return;

        _comicRequest.Thumbnail = e.File;
        
        var imageDataUrl = await _image.ImageToString(e.File);

        _element.ThumbnailComic = imageDataUrl;
        //Cập nhât UI
        StateHasChanged();
    }

    private async void GetChapters()
    {
        _chapters = await _ChapterApi.GetChaptersInComic(_comic.Id);
        StateHasChanged();
    }

    private async void GetPages(Guid idChapter)
    {
        _pages = await _PageApi.GetPagesInChapter(idChapter);
        StateHasChanged();
    }

    protected class ViewElement
    {
        public bool IsShow = false;
        public bool IsSubmit { get; set; } = true;
        public string TextButtonUpdate = "Cập Nhật";
        public string AnimationSlide { get; set; } = "slide-in-elliptic-right-fwd";
        public string ThumbnailComic { get; set; } = "";
        public int Apiresult { get; set; } = 0;
    }

}
