@page "/comic/detail/{nameAlias}"
@using WebTruyen.UI.Admin.Service.ComicService
@using WebTruyen.Library.Entities.ViewModel
@using WebTruyen.UI.Admin.Components;
@using WebTruyen.UI.Admin.RequestClient


<link href="./resources/css/animation.css" rel="stylesheet" />

@if (_comic == null)
{
    <Loading></Loading>
}
else
{
    <div class="row g-2 g-lg-3">
        <div class="col-auto" style="min-width: 18rem;">
            <div class="card slide-in-elliptic-top-fwd me-5" style="width: 18rem; z-index: 1">
                <img src="@_element.ThumbnailComic" class="card-img-top" alt="@_comic.NameAlias">
                <div class="card-body">
                    <h5 class="card-title">@_comic.Name</h5>
                    <p class="card-text">@_comic.Description</p>
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Tác Giả:@_comic.Author</li>
                    <li class="list-group-item">Tình Trạng:@_comic.Status</li>
                    <li class="list-group-item">Lượt Xem:@_comic.Views</li>
                </ul>
                <div class="card-body">
                    <button type="button" class="btn btn-primary" @onclick=OpenUpdate>@_element.TextButtonUpdate</button>
                    <a href="#" class="card-link">Xóa</a>
                </div>
            </div>
        </div>
        @if (_element.IsShow)
        {
            <div class="col" style="width: 18rem;">
                <div class="d-flex flex-wrap @_element.AnimationSlide">
                    <EditForm Model="@_comicRequest" OnSubmit="@Update">
                        <span>Hình</span>
                        <InputFile class="form-control" OnChange="InputImage" @bind-Value="_comicRequest.Thumbnail" name="Thumbnail"></InputFile>
                        <span>Tên</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.Name"></InputText>
                        <span>Tên Khác</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.AnotherNameOfComic"></InputText>
                        <span>Tác Giả</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.Author"></InputText>
                        <span>Mô Tả</span>
                        <InputText class="form-control" @bind-Value="_comicRequest.Description"></InputText>
                        <span>Tình Trạng</span>
                        <InputSelect class="form-control" @bind-Value="_comicRequest.Status">
                            <option value="0">Đang Tiến Hành</option>
                            <option value="1">Đã Hoàn Thành</option>
                            <option value="2">Đã Hủy</option>
                        </InputSelect>
                        @if (_element.IsSubmit)
                        {
                            <input type="submit" class="btn btn-primary mt-5" value="Save" />
                        }
                        else
                        {
                            <button class="btn btn-primary mt-5" type="button" disabled>
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                Loading...
                            </button>
                        }
                    </EditForm>
                </div>
            </div>
        }

        <div class="col-auto" style="width: 18rem;">
            <div class="flex-wrap">
                <!--button call offcanvas-bottom -->
                <button type="button" class="btn btn-outline-primary" data-bs-toggle="offcanvas" data-bs-target="#offcanvasBottom" aria-controls="offcanvasBottom">Chap 1</button>

            </div>
        </div>

    </div>

    <!-- offcanvas-bottom -->
    <div class="offcanvas offcanvas-bottom" tabindex="-1" id="offcanvasBottom" aria-labelledby="offcanvasBottomLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="offcanvasBottomLabel">Offcanvas bottom</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body small">
            ...
        </div>
    </div>

}

@code {
    [Parameter]
    public string NameAlias { get; set; }

    [Inject] private IComicApiClient _ComicApi { get; set; }

    private ComicVM _comic = new ComicVM();
    private ComicRequestClient _comicRequest = new ComicRequestClient();
    private ViewElement _element = new ViewElement();

    protected override async Task OnInitializedAsync()
    {
        _comic = await _ComicApi.GetComic(NameAlias);
        _comic.Name ??= "";
        _comic.NameAlias ??= "";
        _comic.AnotherNameOfComic ??= "";
        _comic.Author ??= "";
        _comic.Description ??= "";
        _element.ThumbnailComic = _comic.Thumbnail;

        _comicRequest.Name = _comic.Name;
        _comicRequest.NameAlias = _comic.NameAlias;
        _comicRequest.AnotherNameOfComic = _comic.AnotherNameOfComic;
        _comicRequest.Author = _comic.Author;
        _comicRequest.Description = _comic.Description;
    }

    private void Update()
    {
        _ComicApi.PostComic(_comicRequest);
    }

    private async void OpenUpdate()
    {
        _element.TextButtonUpdate = _element.IsShow ? "Cập Nhật" : "Hủy";
        _element.AnimationSlide = _element.IsShow ? "slide-out-elliptic-right-fwd" : "slide-in-elliptic-right-fwd";
        if (_element.IsShow)
            await Task.Delay(400);
        _element.IsShow = !_element.IsShow;
        StateHasChanged();
    }

    private async void InputImage(InputFileChangeEventArgs e)
    {

        var format = e.File.ContentType; //lấy định dạng file

        var buffer = new byte[e.File.Size];//Khởi tạo vùng nhớ

        await e.File.OpenReadStream().ReadAsync(buffer);//Đọc dữ liệu vào vùng nhớ
        var imageDataUrl = $"data:{format};base64,{Convert.ToBase64String(buffer)}";

        _element.ThumbnailComic = imageDataUrl;
        //Cập nhât UI
        StateHasChanged();

    }

    private void GetPages()
    {

    }

    protected class ViewElement
    {
        public bool IsShow = false;
        public bool IsSubmit { get; set; } = true;
        public string TextButtonUpdate = "Cập Nhật";
        public string AnimationSlide { get; set; } = "slide-in-elliptic-right-fwd";
        public string ThumbnailComic { get; set; } = "";
    }

}
